620. Not Boring Movies
SELECT * FROM Cinema 
WHERE description <> 'boring' AND MOD(ID,2)=1 
ORDER BY rating DESC;

1251. Average Selling Price
SELECT p.product_id, IFNULL(round(SUM(p.price*u.units)/sum(u.units),2),0) as average_price
FROM Prices p 
LEFT JOIN UnitsSold u
ON p.product_id = u.product_id AND 
u.purchase_date BETWEEN p.Start_date and p.end_date
GROUP BY p.product_id

1075. Project Employees I
SELECT P.project_id, ROUND(AVG(E.experience_years), 2) AS average_years FROM 
Project AS P LEFT JOIN Employee AS E 
ON P.employee_id = E.employee_id 
GROUP BY P.project_id

1633. Percentage of Users Attended a Contest
SELECT contest_id , 
ROUND( COUNT(user_id)*100/(SELECT COUNT(user_id) FROM users) , 2) AS percentage 
FROM Register
GROUP BY contest_id 
ORDER BY percentage DESC, contest_id ASC;

1211. Queries Quality and Percentage
SELECT query_name , ROUND(AVG (rating/position),2) AS quality , 
ROUND(SUM(IF( rating < 3 ,1,0))/count(*)*100,2) AS poor_query_percentage FROM Queries 
WHERE query_name IS NOT NULL
GROUP BY query_name;
